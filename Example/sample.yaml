swagger: "2.0"
info:
  version: "0.0.1"
  title: Agent Setup API
  description: |
    The provisioning service will be used to create objects in configuration server in a way that is consistent with the BEC model.
    
    The "users" resource will be used to perform CRUD operations on config server person objects. Note that this API will extend the low level configuration server API to add additional functionality that will allow persons to be created in a way that makes them immediately useable in BEC. Operations on this resource may result in other configuration objects being modified as well.
    
# during dev, should point to your local machine
host: localhost:7001
# basePath prefixes all resource paths
basePath: /api/provisioning/v3/users
#
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
paths:
  /users:
    post:
      tags: ["users"]  
      security:
       - basicAuth: []
      description: The POST operation will create a new CfgPerson object in configuration server and configure related objects
      operationId: usersPost
      parameters:
        - name: body
          in: body
          description: Body Data
          required: true
          schema:
            $ref: '#/definitions/usersPost'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usersPostResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/usersResponseError"

  /users/{dbid}:
    get:
      tags: ["users"]  
      security:
       - basicAuth: []
      description: This operation will retrieve the specified CfgPerson object in configuration server
      operationId: usersGet
      parameters:
        - name: dbid
          in: path
          description: User DBID
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usersGetResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/usersResponseError"
    put:
      tags: ["users"]    
      security:
       - basicAuth: []
      description: This operation will update the specified CfgPerson object in configuration server. The same set of attributes as "POST" may be used
      operationId: usersPut
      parameters:
        - name: dbid
          in: path
          description: User DBID
          required: true
          type: string
        - name: body
          in: body
          description: Body Data
          required: true
          schema:
            $ref: '#/definitions/usersPost'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usersPutResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/usersResponseError"
    delete:
      tags: ["users"]  
      security:
       - basicAuth: []
      description: Deletes existing user
      operationId: usersDelete
      parameters:
        - name: dbid
          in: path
          description: User DBID
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/usersDeleteResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/usersResponseError"
definitions:
  usersPost:
    type: object
    required:
      - userName
      - firstName
      - lastName
      - password
    properties:
      changePasswordOnNextLogin:
        description: |
          if 'true', user will be asked to change password on first login.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: boolean
      emailAddress:
        description: |
          User's email.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      employeeID:
        description: |
          user's Employee ID.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      externalID:
        description: |
          External ID.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      enabled:
        description: |
          User is enabled or disabled.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: boolean
      userName:
        description: | 
          User unique login.
          
          Controls the value of the corresponding CfgPerson attribute
        type: string
      firstName:
        description: |
          User's first name.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      lastName:
        description: | 
          User's last name.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      loginCode:
        description:  | 
          The user's login code.
          
          Effect: A corresponding CfgAgentLogin will be created on all switches in the "switchNames" collection. It will then be assigned to the CfgPerson that's being created.
        type: string
      password:
        description: |
          Password as plain text.
          
          Effect: Controls the value of the corresponding CfgPerson attribute
        type: string
      placeNames:
        description: |
          A list of places available to the user (for multimedia only users).
          
          Effect: The list is written to the current CfgPerson's "htcc" annex. e.g. CfgPerson/userProperties/htcc/place = p1, p2, p3
        type: array
        items:
          type: string
      switchNames:
        description: |
          The switch names that the user will work on.
          
          Effect: A list of switches where the user's telephony objects will be created (i.e. dns, agent logins)
        type: array
        items:
          type: string
      phones:
        description: | 
          A list of phone number descriptors used to create the user's DNs.
          
          Effect: For each phone number, a corresponding DN will be created on all of the switches specified by "switchNames" and assigned to the specified place.
        type: array
        items:
          $ref: "#/definitions/Extension"
      supportSoftPhone:
        description:  | 
          Enable SIP Phone, true/false.
          
          Effect: Writes corresponding information to the TServer annex of the created DNs (see sipPhoneType)
        type: boolean
      sipPhoneType:
        description: | 
          Specifies the sip phone typed if supportSoftPhone = true.
          
          Effect: Specifies  the sip phone type and corresponding annex to be written to the DN's "TServer" section
        type: string
        enum: 
              - Disable CTI
              - Genesys SoftPhone (sip-cti-control: talk, hold, dtmf)
              - Genesys 420HT / AudioCodes 4xxHD (sip-cti-control: talk, hold)
              - Generic Phone (sip-cti-control: talk)

      skills:
        description: |
          List of Skills to assign to the user.
          
          Effect: The list contains a collection of skill descriptors. If the corresponding skill is found, it is assigned to the user with the specified level. If it is not found, the skill is created and then assigned. 
        type: array
        items:
          $ref: "#/definitions/Skill"
      agentGroups:
        description: | 
          List of agent groups that the user should be assigned to.
          
          Effect: The user will be assigned to each group that already exists. If a particular group is not already in the system it will be created.
        type: array
        items:
          type: string
      accessGroups:
        description: |
          List of access groups that the user should belong to.
          
          Effect: The user will be assigned to each group that can be located. If a group does not already exist, it will NOT be created.
        type: array
        items:
          type: string
      voiceMail:
        description: | 
          User's Voice Mail.
          
          Effect: Written to the user's CfgAgentLogin.userProperties.TServer.gvm_mailbox
        type: number
      wrapUpTime:
        description: | 
          User's Wrap Up Time.
        
          Effect: Configured for each CfgAgentLogin
        type: string
  usersPostResponse:
    type: object  
    properties:
      statusCode:
        type: number
      path:
        type: string 
  usersGetResponse:
    type: object  
    properties:
      statusCode:
        type: number
      data:
        $ref: "#/definitions/usersPost"
  usersPutResponse:
    type: object  
    properties:
      statusCode:
        type: number
  usersDeleteResponse:
    type: object  
    properties:
      statusCode:
        type: number
  usersResponseError:
    type: object  
    properties:
      statusCode:
        type: number
      statusMessage:
        type: string 
  Extension:
    type: object  
    properties:
        number:
          type: number
          description: Phone number
        description:
          type: string
          description: Desrciption (Mobile, Office)
        isDefault:
          type: boolean
          description: true/false
        placeName:
          type: string
          description: Name of the corresponding place name
  Skill:
    type: object  
    properties:
        level: 
          type: number
          description: Skill level
        name:
          type: string
          description: Skill name
