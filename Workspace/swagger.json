{
  "swagger": "2.0",
  "info": {
    "title": "Workspace Application API",
    "description": "Application API used by Workspace Web Edition",
    "version": "1.0.0"
  },
  "schemes": [
    "http"
  ],
  "basePath": "/wwe/v3",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "session",
      "description": "Session API",
      "externalDocs": {
  	    "description": "Session Documentation",
  	    "url": "https://developer.genesys.com/api/rest/v2/session/index.html"
      }
    },
    {
      "name": "voice",
      "description": "Voice API",
      "externalDocs": {
  	    "description": "Voice Documentation",
  	    "url": "https://developer.genesys.com/api/rest/v2/voice/index.html"
      }
    },
    {
      "name": "targets",
      "description": "Targets API",
      "externalDocs": {
  	    "description": "Targets Documentation",
  	    "url": "https://developer.genesys.com/api/rest/v2/targets/index.html"
      }
    }
  ],

  "paths": {
    "/configuration": {
      "get": {
        "x-swagger-router-controller": "configuration",
        "summary": "Read settings, action codes, business attributes and other configuration.",
        "tags": [
          "session"
        ],
        "description": "This request returns all necessary configuration items to be used by the UI. This includes action codes, business attributes, transactions and settings at the moment.\n",
        "parameters": [
          {
            "name": "types",
            "in": "query",
            "description": "use to return transactions having this particular key in userProperties",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/configResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/configuration/business-attribute/{id}": {
      "get": {
        "x-swagger-router-controller": "configuration",
        "operationId": "businessAttributeHierarchy",
        "summary": "Get the business attribute hierarchy",
        "tags": [
          "session"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the business attribute",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/current-user": {
      "get": {
        "x-swagger-router-controller": "user",
        "summary": "Read information about the logged in user including any existing media logins and calls",
        "tags": [
          "session"
        ],
        "description": "This request can be used to retrieve information about the current user. This can be done at startup to check for an existing session. The returned user information includes state recovery information about the active session. \n",
        "responses": {
          "200": {
            "description": "User information",
            "schema": {
              "$ref": "#/definitions/currentUser"
            }
          },
          "403": {
            "description": "No valid session exsits and login is required",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          },
          "500": {
            "description": "Failed to read user information",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/activate-channels": {
      "post": {
        "x-swagger-router-controller": "session",
        "operationId": "activateChannels",
        "summary": "Activate channels for the user with the specified resources",
        "tags": [
          "session"
        ],
        "description": "The activate-channels request is used to activate voice/media for the user by declaring the channels and resources that should be used. If the channels are is successfully activated, additional information about the state of active resources (dns, channels) will be received via events.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "foo",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "agentId"
                  ],
                  "properties": {
                    "agentId": {
                      "type": "string",
                      "description": "agentId (switch login code) that should be used to log the agent in"
                    },
                    "placeName": {
                      "type": "string",
                      "description": "The name of the place that should be used to log the agent in. Either placeName or dn must be provided."
                    },
                    "dn": {
                      "type": "string",
                      "description": "The dn (number) that should be used to login the agent."
                    },
                    "queueName": {
                      "type": "string",
                      "description": "The queue name that should be used to login the agent."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "x-swagger-router-controller": "session",
        "operationId": "logout",
        "summary": "Logout of media and end the session",
        "tags": [
          "session"
        ],
        "description": "This request is used to end the user session. It will log the agent out for voice/channels, end the HTTP session and clean up related resources. The suggested shutdown sequence is to disconnect socket.io and then make this request. After ending the session the login request is required before making any new calls to the API.\n",
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/dnd-on": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "dndOn",
        "summary": "Set dnd on for voice",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/login": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "dndOn",
        "summary": "Login the media voice",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/logout": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "logout",
        "summary": "Logout the media voice",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/dnd-off": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "dndOff",
        "summary": "Set dnd off for voice",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/set-forward": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "forward",
        "summary": "Forward to other dn",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "forwardTo"
                  ],
                  "properties": {
                    "forwardTo": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/cancel-forward": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "cancelForward",
        "summary": "Cancel active forward",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/ready": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "ready",
        "summary": "Change to the ready state for voice",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/not-ready": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "notReady",
        "summary": "Change to the not ready state for voice",
        "tags": [
          "voice"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "foo",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasonCode": {
                      "type": "string",
                      "description": "the reason code"
                    },
                    "agentWorkMode": {
                      "type": "string",
                      "description": "the agent workmode."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/dial": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "dial",
        "summary": "Dial a new call to the specified destination",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "Directory number of the party the call will be transferred to."
                    },
                    "location": {
                      "type": "string",
                      "description": "Name of the remote location in the form of <SwitchName> or <T-ServerApplicationName>@<SwitchName>. When there is no need to specify a T-Server for location, this parameter must have the value NULL, not an empty string."
                    },
                    "makeCallType": {
                      "type": "integer",
                      "description": "Refer to the type TMakeCallType."
                    },
                    "userData": {
                      "type": "array",
                      "description": "A key/value pairs list of the user data that should be attached to the call.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "outboundCallerId": {
                      "type": "string",
                      "description": "value to be set as CPN_DIGITS."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/get-calls": {
      "get": {
        "x-swagger-router-controller": "voice",
        "operationId": "getCalls",
        "summary": "Get all the calls",
        "tags": [
          "voice"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "On error will provide a code that can be used to get more detail about the error."
                    },
                    "message": {
                      "type": "string",
                      "description": "On error will provide a message with more detail about the error. Keep in mind that the error message will be fairly general and internal details are not exposed."
                    }
                  }
                },
                "data": {
                  "type": "object",
                  "required": [
                    "calls"
                  ],
                  "properties": {
                    "calls": {
                      "type": "array",
                      "description": "The list of all the calls.",
                      "items": {
                        "$ref": "#/definitions/call"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/answer": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "answer",
        "summary": "Answer a call",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/hold": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "hold",
        "summary": "Place a call on hold",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/retrieve": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "retrieve",
        "summary": "Retrieve a held call",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/release": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "release",
        "summary": "Release a call",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/attach-user-data": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "attachUserData",
        "summary": "Attach user data to a call",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "userData",
            "in": "body",
            "description": "An array of key/value pairs.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "userData"
                  ],
                  "properties": {
                    "userData": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/update-user-data": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "updateUserData",
        "summary": "Update user data to a call",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "userData",
            "in": "body",
            "description": "An array of key/value pairs.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "userData"
                  ],
                  "properties": {
                    "userData": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/delete-pair": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "deletePair",
        "summary": "Remove one key/value pair in the user data",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "body",
            "description": "The key of the key/value pairs to delete.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/send-user-event": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "sendUserEvent",
        "summary": "Send a userEvent event to TServer with provided attached data.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "userData",
            "in": "body",
            "description": "An array of key/value pairs.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "userData"
                  ],
                  "properties": {
                    "userData": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "callId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/single-step-transfer": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "singleStepTransfer",
        "summary": "Transfer a call in a single step",
        "description": "Transfers the call from a specified directory number dn that is currently engaged in the call specified by the parameter conn_id to a destination DN that is specified by the parameter destination.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call that is requested to be transferred.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "Directory number of the party the call will be transferred to."
                    },
                    "location": {
                      "type": "string",
                      "description": "Name of the remote location in the form of <SwitchName> or <T-ServerApplicationName>@<SwitchName>. When there is no need to specify a T-Server for location, this parameter must have the value NULL, not an empty string."
                    },
                    "userData": {
                      "type": "array",
                      "description": "A key/value pairs list of the user data that should be attached to the call.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/single-step-conference": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "singleStepConference",
        "summary": "Create a conference in a single step",
        "description": "Adds a new party to an existing call and creates a conference.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call that is requested to be conferenced.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "Directory number of the party to which the call will be conferenced."
                    },
                    "location": {
                      "type": "string",
                      "description": "Name of the remote location in the form of <SwitchName> or <T-ServerApplicationName>@<SwitchName>. When there is no need to specify a T-Server for location, this parameter must have the value NULL, not an empty string."
                    },
                    "userData": {
                      "type": "array",
                      "description": "A key/value pairs list of the user data that should be attached to the call.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/initiate-transfer": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "initiateTransfer",
        "summary": "Initiate a transfer",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call that is requested to be placed on hold.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "Directory number of the party to be called."
                    },
                    "location": {
                      "type": "string",
                      "description": "Name of the remote location in the form of <SwitchName> or <T-ServerApplicationName>@<SwitchName>. When there is no need to specify a T-Server for location, this parameter must have the value NULL, not an empty string."
                    },
                    "userData": {
                      "type": "array",
                      "description": "A key/value pairs list of the user data that should be attached to the call.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "outboundCallerId": {
                      "type": "string",
                      "description": "value to be set as CPN_DIGITS."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/initiate-conference": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "initiateConference",
        "summary": "Initiate a conference",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call that is requested to be placed on hold.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "Directory number of the party to be dialed."
                    },
                    "location": {
                      "type": "string",
                      "description": "Name of the remote location in the form of <SwitchName> or <T-ServerApplicationName>@<SwitchName>. When there is no need to specify a T-Server for location, this parameter must have the value NULL, not an empty string."
                    },
                    "userData": {
                      "type": "array",
                      "description": "A key/value pairs list of the user data that should be attached to the call.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "outboundCallerId": {
                      "type": "string",
                      "description": "value to be set as CPN_DIGITS."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/complete-transfer": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "completeTransfer",
        "summary": "Complete a transfer",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the original call; will be assigned to the resulting transferred call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "currentConnId"
                  ],
                  "properties": {
                    "currentConnId": {
                      "type": "string",
                      "description": "Connection identifier of the consultation call; will be deleted after completion of operation."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/complete-conference": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "completeConference",
        "summary": "Complete a conference",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the original call; will be assigned to the resulting conference call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "currentConnId"
                  ],
                  "properties": {
                    "currentConnId": {
                      "type": "string",
                      "description": "Connection identifier of the consultation call; the consultation call will be deleted after completion of operation."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/delete-from-conference": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "deleteFromConference",
        "summary": "Complete a conference",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the conference call from which the object is requested to be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "dnToDrop"
                  ],
                  "properties": {
                    "dnToDrop": {
                      "type": "string",
                      "description": "Reference to the telephony object that is requested to be deleted from the conference call. This parameter can be either a dn or a party_id, where party_id is the party identifier given by the switch."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/reconnect-call": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "reconnectCall",
        "summary": "Reconnect a call",
        "description": "Releases the telephony object specified by the parameter dn from the active call specified by the parameter current_conn_id and retrieves the previously held call, specified by the parameter held_conn_id, to the same object. This function is commonly used to clear an active call and to return to a held call, or to cancel a consult call (because of no answer, called device busy, and so on) and then to return to a held call.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the original call that should be retrieved.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "currentConnId"
                  ],
                  "properties": {
                    "currentConnId": {
                      "type": "string",
                      "description": "Connection identifier of the active call from which the telephony object in question should be released."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/alternate-call": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "alternateCall",
        "summary": "Alternate between calls",
        "description": "On behalf of the telephony object specified by the parameter dn, places the active call specified by the parameter current_conn_id on hold and connects the call specified by the parameter held_conn_id.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call that is requested to be connected.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "currentConnId"
                  ],
                  "properties": {
                    "currentConnId": {
                      "type": "string",
                      "description": "Connection identifier of the active call that is requested to be placed on hold. This parameter can be either a dn or a party_id, where party_id is the party identifier given by the switch."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/clear-call": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "clearCall",
        "summary": "Clear all the parties in the call.",
        "description": "Deletes all parties, that is, all telephony objects, from the call specified by conn_id and disconnects the call.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call, from which the telephony object in question is requested to be released.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/redirect-call": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "redirectCall",
        "summary": "Redirect the call.",
        "description": "Requests that the call be redirected, without an answer, from the party specified by the parameter dn to the party specified by the parameter dest_dn.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection ID of the current call handled by the DN.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "destination"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string",
                      "description": "The other main Directory Number (which your application did not register) involved in this request or event. For instance, the DN of the main party of the call."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/send-dtmf": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "sendDTMF",
        "summary": "Send digits as DTMF.",
        "description": "On behalf of the telephony object specified by the parameter dn, sends digits that are expected by an interactive voice response system.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "dtmfDigits"
                  ],
                  "properties": {
                    "dtmfDigits": {
                      "type": "string",
                      "description": "The digits that should be sent."
                    },
                    "reasons": {
                      "type": "array",
                      "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    },
                    "extensions": {
                      "type": "array",
                      "description": "A key/value pairs list of additional data.",
                      "items": {
                        "$ref": "#/definitions/kvpair"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/start-monitoring": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "startMonitoring",
        "summary": "Start the monitoring of an agent.",
        "description": "Start the monitoring of an agent, providing monitoring information (deviceId to be monitored, operationMode (Monitor/Coach), monitoringMode (NextCall/AllCalls), monitoringScope (Agent/Call)).",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "phoneNumberToMonitor"
                  ],
                  "properties": {
                    "phoneNumberToMonitor": {
                      "type": "string",
                      "description": "The phone number that should be monitored"
                    },
                    "monitoringMode": {
                      "type": "string",
                      "enum": [
                        "Mute",
                        "Coach"
                      ],
                      "description": "The monitoring mode (Mute,Coach)"
                    },
                    "monitoringNextCallType": {
                      "type": "string",
                      "enum": [
                        "OneCall",
                        "AllCalls"
                      ],
                      "description": "The monitoring call type (NextCall/AllCalls)."
                    },
                    "monitoringScope": {
                      "type": "string",
                      "enum": [
                        "Call",
                        "Agent"
                      ],
                      "description": "The monitoring scope (Call/Agent)."
                    },
                    "location": {
                      "type": "string",
                      "description": "The switch name where the phone number to be monitored is located (optional)"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/stop-monitoring": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "stopMonitoring",
        "summary": "Stop the monitoring of an agent.",
        "description": "Stop the monitoring of an agent, providing monitoring information (deviceId to be monitored).",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "phoneNumber"
                  ],
                  "properties": {
                    "phoneNumber": {
                      "type": "string",
                      "description": "The phone number currently monitored, for which the monitoring should be stopped"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/switch-to-listen-in": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "switchToListenIn",
        "summary": "Switch to listen in monitoring mode.",
        "description": "Switch the currently monitored voice interaction to listen in mode",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "monitoringScope": {
                      "type": "string",
                      "enum": [
                        "Call",
                        "Agent"
                      ],
                      "description": "The monitoring scope (Call/Agent)."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/switch-to-coaching": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "switchToCoaching",
        "summary": "Switch to coaching monitoring mode.",
        "description": "Switch the currently monitored voice interaction to coaching mode",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "monitoringScope": {
                      "type": "string",
                      "enum": [
                        "Call",
                        "Agent"
                      ],
                      "description": "The monitoring scope (Call/Agent)."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/switch-to-barge-in": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "switchToBargeIn",
        "summary": "Switch to barge in monitoring mode.",
        "description": "Switch the currently monitored voice interaction to barge in mode",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Connection identifier of the call in question.",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "monitoringScope": {
                      "type": "string",
                      "enum": [
                        "Call",
                        "Agent"
                      ],
                      "description": "The monitoring scope (Call/Agent)."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/start-call-recording": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "startCallRecording",
        "summary": "Starts call recording.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/stop-call-recording": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "stopCallRecording",
        "summary": "Stops call recording.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/pause-call-recording": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "pauseCallRecording",
        "summary": "Pauses call recording.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/voice/calls/{id}/resume-call-recording": {
      "post": {
        "x-swagger-router-controller": "voice",
        "operationId": "resumeCallRecording",
        "summary": "Resumes call recording.",
        "tags": [
          "voice"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the call",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/targets": {
      "get": {
        "x-swagger-router-controller": "targets",
        "operationId": "get",
        "summary": "Search for targets",
        "tags": [
          "targets"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "description": "The text to search for",
            "required": true,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Comma separated list of types to include in the search",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Desired sort order (asc or desc). asc if not specified",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results. 100 if not specified.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    },
    "/targets/unsubscribe": {
      "post": {
        "x-swagger-router-controller": "targets",
        "operationId": "unsubscribe",
        "summary": "Unsubscribe to availability notifications for previous search result",
        "tags": [
          "targets"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Request parameters.",
            "required": true,
            "schema": {
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "required": [
                    "subscriptionId"
                  ],
                  "properties": {
                    "subscriptionId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request succeeded.",
            "schema": {
              "$ref": "#/definitions/apiSuccessResponse"
            }
          },
          "500": {
            "description": "Request failed.",
            "schema": {
              "$ref": "#/definitions/apiErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "currentUser": {
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "data": {
          "type": "object",
          "required": [
            "user"
          ],
          "properties": {
            "user": {
              "type": "object",
              "required": [
                "userName",
                "employeeId"
              ],
              "properties": {
                "dbid": {
                  "type": "integer"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "userName": {
                  "type": "string"
                },
                "employeeId": {
                  "type": "string"
                },
                "defaultPlace": {
                  "type": "string"
                },
                "agentLogin": {
                  "type": "string"
                },
                "userProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/kvpair"
                  }
                },
                "activeSession": {
                  "type": "object",
                  "properties": {
                    "dn": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "agentId": {
                          "type": "string"
                        },
                        "agentState": {
                          "type": "string"
                        },
                        "agentWorkMode": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "configResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "actionCodes": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "userProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/kvpair"
                    }
                  }
                }
              }
            },
            "transactions": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "userProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/kvpair"
                    }
                  }
                }
              }
            },
            "businessAttributes": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "values": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "userProperties": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/kvpair"
                          }
                        }
                      }
                    }
                  },
                  "userProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/kvpair"
                    }
                  }
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "On error will provide a code that can be used to get more detail about the error."
            },
            "message": {
              "type": "string",
              "description": "On error will provide a message with more detail about the error. Keep in mind that the error message will be fairly general and internal details are not exposed."
            }
          }
        }
      }
    },
    "kvpair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apiSuccessResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "On error will provide a code that can be used to get more detail about the error."
            },
            "message": {
              "type": "string",
              "description": "On error will provide a message with more detail about the error. Keep in mind that the error message will be fairly general and internal details are not exposed."
            }
          }
        }
      }
    },
    "apiErrorResponse": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "On error will provide a code that can be used to get more detail about the error."
            },
            "message": {
              "type": "string",
              "description": "On error will provide a message with more detail about the error. Keep in mind that the error message will be fairly general and internal details are not exposed."
            }
          }
        }
      }
    },
    "call": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "previousCallId": {
          "type": "string"
        },
        "parentCallPath": {
          "type": "string"
        },
        "parentCallUri": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "connId": {
          "type": "string"
        },
        "callUuid": {
          "type": "string"
        },
        "callType": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
          }
        },
        "dnis": {
          "type": "string"
        },
        "ani": {
          "type": "string"
        },
        "recordingState": {
          "type": "string"
        },
        "userData": {
          "type": "array",
          "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
          "items": {
            "$ref": "#/definitions/kvpair"
          }
        },
        "extensions": {
          "type": "array",
          "description": "A key/value pairs list of a data structure that provides additional information associated with this action.",
          "items": {
            "$ref": "#/definitions/kvpair"
          }
        }
      }
    }
  }
}